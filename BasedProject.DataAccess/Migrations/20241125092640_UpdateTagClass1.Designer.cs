// <auto-generated />
using System;
using BasedProject.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasedProject.DataAccess.Migrations
{
    [DbContext(typeof(BasedProjectDbContext))]
    [Migration("20241125092640_UpdateTagClass1")]
    partial class UpdateTagClass1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BasedProject.Models.BaseEntities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CategoryUrlSlug")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc91bb55-c0f2-4012-a0a7-8b5a5ed626c9"),
                            CategoryName = "Technology",
                            CategoryUrlSlug = "technology",
                            Description = "All about tech"
                        },
                        new
                        {
                            Id = new Guid("c1a50d85-b239-4281-9de1-4fb911d525cf"),
                            CategoryName = "Lifestyle",
                            CategoryUrlSlug = "lifestyle",
                            Description = "Tips for better living"
                        },
                        new
                        {
                            Id = new Guid("4bc46f19-70f8-47b9-99c8-045ecdc99da2"),
                            CategoryName = "Travel",
                            CategoryUrlSlug = "travel",
                            Description = "Explore the world"
                        });
                });

            modelBuilder.Entity("BasedProject.Models.BaseEntities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommentHeader")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("CommentTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BasedProject.Models.BaseEntities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasMaxLength(102400)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostUrlSlug")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<int>("RateCount")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalRate")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95b4fcf6-a59b-4477-b815-10262cfea221"),
                            CategoryId = new Guid("bc91bb55-c0f2-4012-a0a7-8b5a5ed626c9"),
                            PostContent = "ASP.NET is a powerful framework...",
                            PostUrlSlug = "getting-started-aspnet",
                            PostedOn = new DateTime(2024, 11, 25, 9, 26, 40, 145, DateTimeKind.Utc).AddTicks(810),
                            Published = true,
                            RateCount = 0,
                            ShortDescription = "A guide to ASP.NET for beginners",
                            Title = "Getting Started with ASP.NET",
                            TotalRate = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = new Guid("f517791a-738e-471c-8f2e-ad18e139038e"),
                            CategoryId = new Guid("c1a50d85-b239-4281-9de1-4fb911d525cf"),
                            PostContent = "Living a healthy life involves...",
                            PostUrlSlug = "healthy-living-tips",
                            PostedOn = new DateTime(2024, 11, 25, 9, 26, 40, 145, DateTimeKind.Utc).AddTicks(820),
                            Published = true,
                            RateCount = 0,
                            ShortDescription = "Tips for a healthy lifestyle",
                            Title = "Healthy Living Tips",
                            TotalRate = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = new Guid("e3797fba-c8ba-41c2-ad56-4ac68cfaf495"),
                            CategoryId = new Guid("4bc46f19-70f8-47b9-99c8-045ecdc99da2"),
                            PostContent = "From beaches to mountains, explore...",
                            PostUrlSlug = "top-travel-destinations",
                            PostedOn = new DateTime(2024, 11, 25, 9, 26, 40, 145, DateTimeKind.Utc).AddTicks(825),
                            Published = true,
                            RateCount = 0,
                            ShortDescription = "The best places to visit this year",
                            Title = "Top 10 Travel Destinations",
                            TotalRate = 0,
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("BasedProject.Models.BaseEntities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TagUrlSlug")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("UsageCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5f20ab3-bf82-482a-a977-6a5c2bbff803"),
                            TagName = "C#",
                            TagUrlSlug = "csharp",
                            UsageCount = 250
                        },
                        new
                        {
                            Id = new Guid("c68f7b7d-1dd5-431e-98d1-9eae2e1b8d54"),
                            TagName = "EF Core",
                            TagUrlSlug = "ef-core",
                            UsageCount = 270
                        },
                        new
                        {
                            Id = new Guid("b7ad3e42-815f-421c-b3b8-4f7a7b94622e"),
                            TagName = "ASP.NET",
                            TagUrlSlug = "aspnet",
                            UsageCount = 240
                        },
                        new
                        {
                            Id = new Guid("d5ec2b1c-a451-41d8-941d-2eddeae45b4c"),
                            TagName = "Technology",
                            TagUrlSlug = "technology",
                            UsageCount = 150
                        },
                        new
                        {
                            Id = new Guid("36bb9f25-5519-49d2-a385-e869b421cd0f"),
                            TagName = "Programming",
                            TagUrlSlug = "programming",
                            UsageCount = 120
                        },
                        new
                        {
                            Id = new Guid("e7860ba8-3785-4307-ad50-9e30e70b2989"),
                            TagName = "C#",
                            TagUrlSlug = "c-sharp",
                            UsageCount = 100
                        },
                        new
                        {
                            Id = new Guid("2bd29247-6f9c-4460-bc05-22ff27ea0f25"),
                            TagName = "ASP.NET",
                            TagUrlSlug = "asp-net",
                            UsageCount = 80
                        },
                        new
                        {
                            Id = new Guid("ef6c8927-7317-4e7e-821e-facd8fe57662"),
                            TagName = "Web Development",
                            TagUrlSlug = "web-development",
                            UsageCount = 70
                        });
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.Property<Guid>("PostsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PostsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("PostTags", (string)null);

                    b.HasData(
                        new
                        {
                            PostsId = new Guid("95b4fcf6-a59b-4477-b815-10262cfea221"),
                            TagsId = new Guid("b7ad3e42-815f-421c-b3b8-4f7a7b94622e")
                        },
                        new
                        {
                            PostsId = new Guid("95b4fcf6-a59b-4477-b815-10262cfea221"),
                            TagsId = new Guid("c68f7b7d-1dd5-431e-98d1-9eae2e1b8d54")
                        },
                        new
                        {
                            PostsId = new Guid("f517791a-738e-471c-8f2e-ad18e139038e"),
                            TagsId = new Guid("e5f20ab3-bf82-482a-a977-6a5c2bbff803")
                        },
                        new
                        {
                            PostsId = new Guid("e3797fba-c8ba-41c2-ad56-4ac68cfaf495"),
                            TagsId = new Guid("e5f20ab3-bf82-482a-a977-6a5c2bbff803")
                        },
                        new
                        {
                            PostsId = new Guid("e3797fba-c8ba-41c2-ad56-4ac68cfaf495"),
                            TagsId = new Guid("b7ad3e42-815f-421c-b3b8-4f7a7b94622e")
                        });
                });

            modelBuilder.Entity("BasedProject.Models.BaseEntities.Comment", b =>
                {
                    b.HasOne("BasedProject.Models.BaseEntities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("BasedProject.Models.BaseEntities.Post", b =>
                {
                    b.HasOne("BasedProject.Models.BaseEntities.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.HasOne("BasedProject.Models.BaseEntities.Post", null)
                        .WithMany()
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasedProject.Models.BaseEntities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BasedProject.Models.BaseEntities.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("BasedProject.Models.BaseEntities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
